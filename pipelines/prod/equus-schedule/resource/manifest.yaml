---
# Source: applications/templates/poddistruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: entry-prod
  name: equus-schedule-prod
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: equus-schedule-prod
---
# Source: applications/templates/vaultsecret.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: equus-schedule-prod-account
  namespace: entry-prod
---
# Source: applications/templates/elastic-agent-pvc.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: build-agent-storage-class
  namespace: gocd
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  iops: "3000"
  throughput: "125"
  fsType: ext4
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
# Source: applications/templates/elastic-agent-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: gocd
  name: equus-schedule-prod-docker-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20G
  storageClassName: build-agent-storage-class
---
# Source: applications/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: entry-prod
  name: equus-schedule-prod
  labels:
    app: equus-schedule-prod
    project: equus-schedule
    environment: prod
spec:
  type: ClusterIP
  selector:
    app: equus-schedule-prod
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: port
      port: 8080
      targetPort: 8080
      protocol: TCP
---
# Source: applications/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: entry-prod
  name: equus-schedule-prod
  labels:
    app: equus-schedule-prod
    project: equus-schedule
    test: test
    environment: prod
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: equus-schedule-prod
  template:
    metadata:      
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        sidecar.istio.io/proxyCPU: "5m"
        sidecar.istio.io/proxyMemory: "128Mi"
        instrumentation.opentelemetry.io/inject-java: "true"
      labels:
        app: equus-schedule-prod
        project: equus-schedule
    spec:
      serviceAccountName: equus-schedule-prod-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - equus-schedule-prod
              topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        Karpenter: enabled
      tolerations:
        - effect: "NoSchedule"
          key: xquare/server
          operator: "Equal"
          value: "true"
      terminationGracePeriodSeconds: 120
      containers:
        - name: equus-schedule-prod
          image: 786584124104.dkr.ecr.ap-northeast-2.amazonaws.com/equus-schedule-prod:prod-qxy34r56
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
          - secretRef:
              name: equus-schedule-prod
          resources:
            requests:
              memory: "500Mi"
              cpu: "20m"
              ephemeral-storage: "20Mi"
            limits:
              memory: "2Gi"
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 3
---
# Source: applications/templates/vaultsecret.yaml
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: equus-schedule-prod-auth
  namespace: entry-prod
spec:
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: xquare
    serviceAccount: equus-schedule-prod-account
    audiences:
      - vault
---
# Source: applications/templates/vaultsecret.yaml
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultDynamicSecret
metadata:
  name: equus-schedule-prod-secret
  namespace: entry-prod
spec:
  mount: xquare-kv
  path: equus-schedule-prod
  destination:
    name: equus-schedule-prod
    create: true
  vaultAuthRef: entry-prod/equus-schedule-prod-auth
  rolloutRestartTargets:
    - kind: Deployment
      name: equus-schedule-prod
---
# Source: applications/templates/vpa.yaml
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: equus-schedule-prod-vpa
  namespace: entry-prod
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind:       Deployment
    name:       equus-schedule-prod
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: "*"
        controlledResources: [ "memory" ]
