---
# Source: applications/templates/poddistruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: osiria-prod
  name: osiria-prod
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: osiria-prod
---
# Source: applications/templates/vaultsecret.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: osiria-prod-account
  namespace: osiria-prod
---
# Source: applications/templates/elastic-agent-pvc.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: build-agent-storage-class
  namespace: gocd
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  iops: "3000"
  throughput: "125"
  fsType: ext4
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
---
# Source: applications/templates/elastic-agent-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: gocd
  name: osiria-prod-docker-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20G
  storageClassName: build-agent-storage-class
---
# Source: applications/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: osiria-prod
  name: osiria-prod
  labels:
    app: osiria-prod
    project: osiria
    environment: prod
spec:
  type: ClusterIP
  selector:
    app: osiria-prod
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: port
      port: 8080
      targetPort: 8080
      protocol: TCP
---
# Source: applications/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: osiria-prod
  name: osiria-prod
  labels:
    app: osiria-prod
    project: osiria
    test: test
    environment: prod
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: osiria-prod
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        sidecar.istio.io/proxyCPU: "5m"
        sidecar.istio.io/proxyMemory: "128Mi"
        instrumentation.opentelemetry.io/inject-java: "true"
      labels:
        app: osiria-prod
        project: osiria
    spec:
      serviceAccountName: osiria-prod-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - osiria-prod
              topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        Karpenter: enabled
      tolerations:
        - effect: "NoSchedule"
          key: xquare/server
          operator: "Equal"
          value: "true"
      terminationGracePeriodSeconds: 120
      containers:
        - name: osiria-prod
          image: 786584124104.dkr.ecr.ap-northeast-2.amazonaws.com/osiria-prod:prod-3l6rltnc
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: osiria-prod
          resources:
            requests:
              memory: "500Mi"
              cpu: "20m"
              ephemeral-storage: "20Mi"
            limits:
              memory: "1Gi"
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 3
---
# Source: applications/templates/datadog-dashboard.yaml
apiVersion: datadoghq.com/v1alpha1
kind: DatadogDashboard
metadata:
  name: osiria-prod-dashboard
  namespace: monitoring
spec:
  title: osiria-prod-dashboard
  description: null
  widgets: |
    [
      {
        "id": 8372280242358600,
        "definition": {
          "title": "Requests",
          "title_size": "16",
          "title_align": "left",
          "show_legend": true,
          "legend_layout": "auto",
          "legend_columns": ["avg", "min", "max", "value", "sum"],
          "time": {"type": "live", "unit": "hour", "value": 1},
          "type": "timeseries",
          "requests": [
            {
              "formulas": [{"formula": "query1"}],
              "queries": [
                {
                  "name": "query1",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "count"},
                  "storage": "hot"
                }
              ],
              "response_format": "timeseries",
              "style": {"palette": "dog_classic", "order_by": "values", "line_type": "solid", "line_width": "normal"},
              "display_type": "bars"
            }
          ]
        },
        "layout": {"x": 0, "y": 0, "width": 4, "height": 2}
      },
      {
        "id": 1828811240780074,
        "definition": {
          "title": "Erros",
          "title_size": "16",
          "title_align": "left",
          "show_legend": true,
          "legend_layout": "auto",
          "legend_columns": ["avg", "min", "max", "value", "sum"],
          "time": {"type": "live", "unit": "hour", "value": 1},
          "type": "timeseries",
          "requests": [
            {
              "formulas": [{"formula": "query1"}],
              "queries": [
                {
                  "name": "query1",
                  "data_source": "spans",
                  "search": {"query": "status:error service:osiria-prod"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "count"},
                  "storage": "hot"
                }
              ],
              "response_format": "timeseries",
              "style": {"palette": "red", "order_by": "values", "line_type": "solid", "line_width": "normal"},
              "display_type": "bars"
            }
          ]
        },
        "layout": {"x": 4, "y": 0, "width": 4, "height": 2}
      },
      {
        "id": 5950195771275574,
        "definition": {
          "title": "Latency",
          "title_size": "16",
          "title_align": "left",
          "show_legend": true,
          "legend_layout": "auto",
          "legend_columns": ["avg", "min", "max", "value", "sum"],
          "time": {"type": "live", "unit": "hour", "value": 1},
          "type": "timeseries",
          "requests": [
            {
              "formulas": [
                {"formula": "query1"},
                {"formula": "query2"},
                {"formula": "query3"},
                {"formula": "query4"},
                {"formula": "query5"}
              ],
              "queries": [
                {
                  "name": "query1",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod @duration:*"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "pc99", "metric": "@duration"},
                  "storage": "hot"
                },
                {
                  "name": "query2",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod @duration:*"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "pc98", "metric": "@duration"},
                  "storage": "hot"
                },
                {
                  "name": "query3",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod @duration:*"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "pc95", "metric": "@duration"},
                  "storage": "hot"
                },
                {
                  "name": "query4",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod @duration:*"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "pc90", "metric": "@duration"},
                  "storage": "hot"
                },
                {
                  "name": "query5",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod @duration:*"},
                  "indexes": ["*"],
                  "group_by": [],
                  "compute": {"aggregation": "pc75", "metric": "@duration"},
                  "storage": "hot"
                }
              ],
              "response_format": "timeseries",
              "style": {"palette": "dog_classic", "order_by": "values", "line_type": "solid", "line_width": "normal"},
              "display_type": "line"
            }
          ]
        },
        "layout": {"x": 8, "y": 0, "width": 4, "height": 2}
      },
      {
        "id": 556828742999416,
        "definition": {
          "title": "",
          "title_size": "16",
          "title_align": "left",
          "requests": [
            {
              "response_format": "event_list",
              "query": {
                "data_source": "issue_stream",
                "query_string": "service:osiria-prod",
                "indexes": []
              },
              "columns": [
                {"field": "details", "width": "auto"},
                {"field": "count", "width": "auto"},
                {"field": "volume", "width": "auto"}
              ]
            }
          ],
          "type": "list_stream"
        },
        "layout": {"x": 0, "y": 2, "width": 12, "height": 3}
      },
      {
        "id": 4013092634840146,
        "definition": {
          "title": "Endpoint Breakdown",
          "title_size": "16",
          "title_align": "left",
          "type": "query_table",
          "requests": [
            {
              "queries": [
                {
                  "name": "query1",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod @duration:*"},
                  "indexes": ["*"],
                  "group_by": [
                    {
                      "facet": "resource_name",
                      "limit": 10,
                      "sort": {"aggregation": "avg", "order": "desc", "metric": "@duration"},
                      "should_exclude_missing": true
                    }
                  ],
                  "compute": {"aggregation": "avg", "metric": "@duration"},
                  "storage": "hot"
                }
              ],
              "response_format": "scalar",
              "sort": {"count": 10, "order_by": [{"type": "formula", "index": 0, "order": "desc"}]},
              "formulas": [{"formula": "query1", "cell_display_mode": "bar"}]
            }
          ],
          "has_search_bar": "auto"
        },
        "layout": {"x": 0, "y": 5, "width": 6, "height": 4}
      },
      {
        "id": 7641022191923658,
        "definition": {
          "time": {"type": "live", "unit": "hour", "value": 1},
          "title": "Status Treemap",
          "type": "treemap",
          "requests": [
            {
              "response_format": "scalar",
              "queries": [
                {
                  "name": "query1",
                  "data_source": "spans",
                  "search": {"query": "service:osiria-prod"},
                  "indexes": ["*"],
                  "group_by": [
                    {
                      "facet": "@http.status_code",
                      "limit": 10,
                      "sort": {"aggregation": "count", "order": "desc", "metric": "count"},
                      "should_exclude_missing": true
                    }
                  ],
                  "compute": {"aggregation": "count"},
                  "storage": "hot"
                }
              ],
              "style": {"palette": "datadog16"},
              "formulas": [{"formula": "query1"}]
            }
          ]
        },
        "layout": {"x": 6, "y": 5, "width": 6, "height": 4}
      },
      {
        "id": 7839211518193048,
        "definition": {
          "title": "",
          "title_size": "16",
          "title_align": "left",
          "requests": [
            {
              "response_format": "event_list",
              "query": {
                "data_source": "trace_stream",
                "query_string": "service:osiria-prod",
                "indexes": ["*"]
              },
              "columns": [
                {"field": "timestamp", "width": "auto"},
                {"field": "service", "width": "auto"},
                {"field": "resource_name", "width": "auto"},
                {"field": "@duration", "width": "auto"},
                {"field": "@http.method", "width": "auto"},
                {"field": "@http.status_code", "width": "auto"},
                {"field": "span_count", "width": "auto"},
                {"field": "latency_breakdown", "width": "auto"}
              ]
            }
          ],
          "type": "list_stream"
        },
        "layout": {"x": 0, "y": 9, "width": 12, "height": 6}
      }
    ]
  templateVariables:
    - name: trace
      prefix: trace
      availableValues: []
      defaults:
        - "*"
  layoutType: ordered
  notifyList: []
  reflowType: fixed
---
# Source: applications/templates/vaultsecret.yaml
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: osiria-prod-auth
  namespace: osiria-prod
spec:
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: xquare
    serviceAccount: osiria-prod-account
    audiences:
      - vault
---
# Source: applications/templates/vaultsecret.yaml
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: osiria-prod-secret
  namespace: osiria-prod
spec:
  mount: xquare-kv
  path: osiria-prod
  destination:
    name: osiria-prod
    create: true
  hmacSecretData: true
  vaultAuthRef: osiria-prod/osiria-prod-auth
  refreshAfter: 1m
  rolloutRestartTargets:
    - kind: Deployment
      name: osiria-prod
  type: kv-v1
---
# Source: applications/templates/virtual-service.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: osiria-prod-domain-ingress
  labels:
    app.kubernetes.io/instance: xquare-ingress
  namespace: osiria-prod
spec:
  gateways:
    - istio-system/xquare-ingressgateway
  hosts:
    - osiria.xquare.app
  http:
    - name: osiria
      route:
        - destination:
            host: 'osiria-prod.osiria-prod.svc.cluster.local'
            port:
              number: 8080
      corsPolicy:
        allowOrigins:
          - regex: ".*"
        allowMethods:
          - POST
          - GET
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
        allowCredentials: true
        allowHeaders:
          - content-type
          - authorization
          - accept
          - accept-encoding
          - Refresh-Token
          - X-Not-Using-Xquare-Auth
          - Oauth-Token
          - oa-token
          - Request-User-Id
          - Request-User-Role
          - X-Refresh-Token
          - x-identifier
        maxAge: "24h"
